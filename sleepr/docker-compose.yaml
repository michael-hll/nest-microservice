version: "3.8"

services:
  reservations:
    container_name: reservations
    build:
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: development
    command: npm run start:dev reservations
    ports:
      - '3100:3100'
    env_file:
      - ./apps/reservations/.env
    volumes:
      - .:/usr/src/app
    depends_on:
      - postgres
  
  auth:
    container_name: auth
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    ports:
      - '3001:3001'
    env_file:
      - ./apps/auth/.env
    volumes:
      - .:/usr/src/app
    depends_on:
      - postgres

  payments:
    container_name: payments
    build:
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: development
    command: npm run start:dev payments
    ports:
      - '3200:3200'
    env_file:
      - ./apps/payments/.env
    volumes:
      - .:/usr/src/app

  notifications:
    container_name: notifications
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    command: npm run start:dev notifications
    ports:
      - '3300:3300'
    env_file:
      - ./apps/notifications/.env
    volumes:
      - .:/usr/src/app
    
  postgres:
    container_name: postgres
    image: postgres
    volumes: 
      - db:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_PASSWORD: Password123
    ports:
      - 5432:5432

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    ports:
      - 8888:80
    environment:
      PGADMIN_DEFAULT_EMAIL: test@test.com
      PGADMIN_DEFAULT_PASSWORD: Password123
    volumes:
      - pgadmin-data:/var/lib/pgadmin
  
  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    restart: always

volumes:
  db:
    driver: local
  pgadmin-data: